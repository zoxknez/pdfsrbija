multipart.enabled=true
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.org.eclipse.jetty=WARN
#logging.level.org.springframework.security.saml2=TRACE
#logging.level.org.springframework.security=DEBUG
#logging.level.org.opensaml=DEBUG
#logging.level.stirling.software.proprietary.security=DEBUG
logging.level.com.zaxxer.hikari=WARN
spring.jpa.open-in-view=false
server.forward-headers-strategy=NATIVE
server.error.path=/error
server.error.whitelabel.enabled=false
server.error.include-stacktrace=always
server.error.include-exception=true
server.error.include-message=always
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.security=DEBUG

spring.servlet.multipart.max-file-size=2000MB
spring.servlet.multipart.max-request-size=2000MB
server.servlet.session.tracking-modes=cookie
server.servlet.context-path=${SYSTEM_ROOTURIPATH:/}
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.exclude=stirling.software.proprietary.security/**
spring.thymeleaf.encoding=UTF-8
# HTTP request/response encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Message bundles encoding
spring.messages.encoding=UTF-8
spring.web.resources.mime-mappings.webmanifest=application/manifest+json
spring.mvc.async.request-timeout=${SYSTEM_CONNECTIONTIMEOUTMILLISECONDS:1200000}

## Use an in-memory H2 database by default to avoid creating on-disk DB files during local runs.
## If you need persistent file-based DB, replace with a file URL or set an environment-specific properties file.
spring.datasource.url=jdbc:h2:mem:stirling-pdf;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=false
spring.jpa.hibernate.ddl-auto=update
server.servlet.session.timeout:30m
# Change the default URL path for OpenAPI JSON
springdoc.api-docs.path=/v1/api-docs
# Set the URL of the OpenAPI JSON for the Swagger UI
springdoc.swagger-ui.url=/v1/api-docs
springdoc.swagger-ui.path=/index.html
posthog.api.key=phc_fiR65u5j6qmXTYL56MNrLZSWqLaDW74OrZH0Insd2xq
posthog.host=https://eu.i.posthog.com

spring.main.allow-bean-definition-overriding=true

# Set up a consistent temporary directory location
java.io.tmpdir=${stirling.tempfiles.directory:${java.io.tmpdir}/stirling-pdf}

# V2 features
v2=false

# --- SRB / SEF (E-Faktura) integration settings ---
# When true, calls are mocked and no network requests are made.
#srb.sef.mock=true
# Base URL for SEF API (e.g. https://demoefaktura.mfin.gov.rs or https://efaktura.mfin.gov.rs)
#srb.sef.base-url=
# API key or token value. Generate in SEF portal under API menad≈æment and activate API status.
#srb.sef.bearer-token=
# Public API prefix from Swagger documentation (usually /api/publicApi)
#srb.sef.api-prefix=/api/publicApi
# Auth header strategy (set one of the following):
# 1) Use custom header name (default X-API-KEY):
#srb.sef.auth-header-name=X-API-KEY
# 2) Or use Authorization header with scheme, e.g., Bearer:
#srb.sef.auth-scheme=Bearer
